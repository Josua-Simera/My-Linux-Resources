Original pipelines that work:

Hardware encode and save to disk from PySpin example:

GST_DEBUG=2,python:4 gst-launch-1.0 pyspinsrc num-buffers=1000 exposure=10000 auto-exposure=false ! video/x-raw, width=1920, height=1080, format=RGB, framerate=25/1 ! videoconvert ! video/x-raw, format=BGRx ! nvvidconv ! omxh264enc profile=high bitrate=4000000  ! video/x-h264, profile=high, streamformat=avc ! h264parse ! mp4mux ! filesink location="pyspinsrc_omx.mp4" -e


Hardware encode and save to disk from aravis plugin example:

gst-launch-1.0 pyspinsrc ! video/x-raw, format=RGB, width=1920, height=1080, framerate=25/1 ! videoconvert ! omxh264enc ! video/x-h264, streamformat=byte-stream ! h264parse ! qtmux ! filesink location=testvid.mp4 -e

===================================================================================================
Modified:

Hardware encode and save to disk using camera trigger?:
BFL:
gst-launch-1.0 pyspinsrc ! video/x-raw, width=1920, height=1080, format=RGB , framerate=25/1 ! videoconvert ! video/x-raw, format=BGRx ! nvvidconv ! omxh264enc profile=high bitrate=8000000  ! video/x-h264, profile=high, streamformat=avc ! h264parse ! mp4mux ! filesink location=pyspinsrc_omx.mp4 -e

BFS:
gst-launch-1.0 pyspinsrc ! video/x-raw, width=4096, height=2160, format=BGRA , framerate=5/1 ! videoconvert ! video/x-raw, format=BGRx ! nvvidconv ! omxh264enc profile=high bitrate=8000000  ! video/x-h264, profile=high, streamformat=avc ! h264parse ! mp4mux ! filesink location=pyspinsrc_omx.mp4 -e

===================================================================================================
jpg compression:

gst-launch-1.0 pyspinsrc num-buffers=1 ! 'video/x-raw, width=1920, height=1080,
format=RGB' ! nvjpegenc ! filesink location=test.jpg -e







